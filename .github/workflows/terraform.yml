name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  release:
    types:
      - published

env:
  tf_actions_working_dir: "./terraform"

permissions:
  pull-requests: write
  id-token: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan
        continue-on-error: true

      - name: Comment PR with Terraform Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = #### Terraform Format and Style üñå\${{ steps.fmt.outcome }}\
            #### Terraform Initialization ‚öôÔ∏è\${{ steps.init.outcome }}\
            #### Terraform Validation ü§ñ\${{ steps.validate.outcome }}\
            <details><summary>Validation Output</summary>

            \\\\n
            ${{ steps.validate.outputs.stdout }}
            \\\

            </details>

            #### Terraform Plan üìñ\${{ steps.plan.outcome }}\

            <details><summary>Show Plan</summary>

            \\\\n
            ${process.env.PLAN}
            \\\

            </details>

            *Pusher: @${{ github.actor }}, Action: \${{ github.event_name }}\, Working Directory: \${{ env.tf_actions_working_dir }}\, Workflow: \${{ github.workflow }}\*;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan